<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxCon_DAA.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAATUAAAA0CAYAAADrNK8VAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAGI1JREFUeF7t3VWsLEW4BWDCAy8QSAge5IETQiDkHBwCBHd3d3d3d3d3d3d3d3d3
        d9e6+YpT93bmdI+f2cPcWkln9kh3V1f/tWr9Ur3HCBkZGS3hzz//DN9991148cUXw0cffRT++eefkd9k
        9AMyqWV0hL///jv89NNP4dNPPw2vv/56eO6558Kzzz4b//7888/D77//PuSD3vkR0TfffBPb+euvv8Z2
        N4J9vv/++3gtzzzzTHj88cfj9tBDD4Xbb789nHfeeeHJJ59s6lgZvUMmtYy2gSx+++238Pzzz4ezzjor
        rLvuumGeeeYJs846a/z7oosuikrmjz/+GLnH0AA5ff311+GOO+4IZ5xxRnj77bcjsTUCEkRg66+/fphl
        llnCVFNNFbcpp5wyDB8+POy0007hgQceGPnrjH5BJrWMtvHLL7+EF154IVx33XXh9NNPD+eee244+eST
        w4EHHhg23XTTsN9++8XvvvrqqyFTM5TWSy+9FE477bSw4447hl122SW+//nnn0f+ohpffvlluPfee8M6
        66wTNtxww3hdRxxxRDjyyCPjdd51113hww8/HPnrjH5BJrWMtvHjjz9GJYO4brnllkheFNC7774bDj/8
        8KhkEAC11mtScz7ERZXdfPPNYZtttgkrrrhi2GSTTaKybJbUKLGtt946XHDBBeHbb78Nf/3118hvM/oV
        mdQy2gbioNaQm7iaAc8lRW5cT6rmlFNOCZ999lnP42rI9ZVXXgn33XdfJLX7778/HH300WHbbbeNAf5M
        aoOLTGoZXUEKxksOPPXUU9Edvfjii8Njjz0WCQ8kDbhrN910UzjppJNijOv999+PBPTGG29EtXfZZZeF
        9957L5JlJ9CWL774Ih7LsV977bXogm6//faZ1AYcmdQyOgayQiAyg1dddVUkLO4n0vrhhx/+V8GJbz3y
        yCPhoIMOCquuumrYZ599wt133x0++eSTcNttt4Vjjjkmxq2QDvXXLUhmcIlbJTWK88EHHwybb755dKO5
        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
        D62qHMURRAAAAABJRU5ErkJggg==
</value>
  </data>
</root>